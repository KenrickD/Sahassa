@model WMS.Domain.DTOs.GIV_RawMaterial.Web.JobReleaseDetailsDto
@{
    ViewData["Title"] = "Job Release Details";
}
@Html.AntiForgeryToken()

<div class="card p-3 mb-4">
    <div class="flex justify-between items-center">
        <div>
            <h4>Job ID: @Model.JobIdShort</h4>
            <p><strong>Full Job ID:</strong> <span class="font-mono text-sm">@Model.JobId</span></p>
            <p><strong>Created:</strong> @Model.CreatedDate.ToString("yyyy-MM-dd HH:mm")</p>
            <p><strong>Created By:</strong> @Model.CreatedByDisplay</p>
            <p><strong>Planned Release Date:</strong> @Model.PlannedReleaseDate.ToString("yyyy-MM-dd")</p>
            <p><strong>Status:</strong> <span class="@Model.StatusClass">@Model.StatusText</span></p>
        </div>
        <div class="flex gap-2">
            <button id="export-excel-btn" class="btn btn-success">
                <iconify-icon icon="mdi:file-excel-outline"></iconify-icon>
                Export to Excel
            </button>
            <a href="@Url.Action("JobReleases")" class="btn btn-secondary">
                <iconify-icon icon="lucide:arrow-left"></iconify-icon>
                Back to Job Releases
            </a>
        </div>
    </div>
</div>

<!-- Job Summary Cards -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
    <div class="card p-4 text-center bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800">
        <h5 class="text-blue-700 dark:text-blue-300 text-sm font-medium mb-2">Materials</h5>
        <div class="text-2xl font-bold text-blue-800 dark:text-blue-200">@Model.MaterialCount</div>
        <div class="text-xs text-blue-600 dark:text-blue-400 mt-1">Raw Materials</div>
    </div>
    <div class="card p-4 text-center bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800">
        <h5 class="text-green-700 dark:text-green-300 text-sm font-medium mb-2">Total Pallets</h5>
        <div class="text-2xl font-bold text-green-800 dark:text-green-200">@Model.TotalPallets</div>
        <div class="text-xs text-green-600 dark:text-green-400 mt-1">Entire Pallets</div>
    </div>
    <div class="card p-4 text-center bg-purple-50 dark:bg-purple-900/20 border-purple-200 dark:border-purple-800">
        <h5 class="text-purple-700 dark:text-purple-300 text-sm font-medium mb-2">Total Items</h5>
        <div class="text-2xl font-bold text-purple-800 dark:text-purple-200">@Model.TotalItems</div>
        <div class="text-xs text-purple-600 dark:text-purple-400 mt-1">Individual Items</div>
    </div>
    <div class="card p-4 text-center bg-gray-50 dark:bg-gray-900/20 border-gray-200 dark:border-gray-800">
        <h5 class="text-gray-700 dark:text-gray-300 text-sm font-medium mb-2">Status</h5>
        <div class="text-lg font-bold">
            <span class="@Model.StatusClass px-2 py-1 rounded text-sm">@Model.StatusText</span>
        </div>
        <div class="text-xs text-gray-600 dark:text-gray-400 mt-1">Current State</div>
    </div>
</div>

<!-- Individual Releases in Job -->
<div class="table-container">
    <div class="card">
        <div class="card-header">
            <div class="flex justify-between items-center">
                <h5 class="card-title">Individual Releases in this Job</h5>
                <div class="text-sm text-gray-600 dark:text-gray-400">
                    <iconify-icon icon="lucide:info" class="mr-1"></iconify-icon>
                    <span class="hidden md:inline">Search by material number, description, or status</span>
                    <span class="md:hidden">Advanced search available</span>
                </div>
            </div>
        </div>
        <div class="card-body">
            <!-- Add responsive wrapper -->
            <div class="table-responsive">
                <table id="job-release-details-table" class="table table-striped" data-job-id="@Model.JobId">
                    <thead>
                        <tr>
                            <th>Material No</th>
                            <th>Description</th>
                            <th>Release Date</th>
                            <th>Status</th>
                            <th>Release Type</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Populated via DataTables -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    /* Fix container width issues */
    .table-container {
        width: 100%;
        max-width: 100%;
        overflow-x: auto;
    }

    /* Table responsive wrapper */
    .table-responsive {
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    /* Constrain table width */
    #job-release-details-table {
        width: 100% !important;
        max-width: 100%;
        table-layout: auto;
    }

    /* Prevent DataTables from expanding beyond container */
    .dataTables_wrapper {
        width: 100% !important;
        max-width: 100% !important;
        overflow-x: hidden;
    }

    .dataTables_scroll {
        width: 100% !important;
        max-width: 100% !important;
    }

    .dataTables_scrollBody {
        width: 100% !important;
        max-width: 100% !important;
    }

    /* Fix column widths */
    #job-release-details-table th,
    #job-release-details-table td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        /* Specific column width constraints */
        #job-release-details-table th:nth-child(1) {
            width: 120px;
            max-width: 120px;
        }
        /* Material No */
        #job-release-details-table th:nth-child(2) {
            width: 250px;
            max-width: 250px;
        }
        /* Description */
        #job-release-details-table th:nth-child(3) {
            width: 120px;
            max-width: 120px;
        }
        /* Release Date */
        #job-release-details-table th:nth-child(4) {
            width: 120px;
            max-width: 120px;
        }
        /* Status */
        #job-release-details-table th:nth-child(5) {
            width: 120px;
            max-width: 120px;
        }
        /* Release Type */
        #job-release-details-table th:nth-child(6) {
            width: 120px;
            max-width: 120px;
        }
        /* Actions */

        /* Apply same constraints to td elements */
        #job-release-details-table td:nth-child(1) {
            width: 120px;
            max-width: 120px;
        }

        #job-release-details-table td:nth-child(2) {
            width: 250px;
            max-width: 250px;
        }

        #job-release-details-table td:nth-child(3) {
            width: 120px;
            max-width: 120px;
        }

        #job-release-details-table td:nth-child(4) {
            width: 120px;
            max-width: 120px;
        }

        #job-release-details-table td:nth-child(5) {
            width: 120px;
            max-width: 120px;
        }

        #job-release-details-table td:nth-child(6) {
            width: 120px;
            max-width: 120px;
        }

    /* Progress bar styles */
    .progress-container {
        width: 100%;
    }

    .progress-bar-large {
        height: 40px;
        background-color: #f3f4f6;
        border-radius: 20px;
        overflow: hidden;
        position: relative;
        border: 2px solid #e5e7eb;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #3b82f6 0%, #10b981 50%, #059669 100%);
        transition: width 0.8s ease-in-out;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        min-width: 60px; /* Ensure text is always visible */
    }

    .progress-text {
        color: white;
        font-weight: 600;
        font-size: 0.875rem;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    }

    /* Status badge styles */
    .status-scheduled {
        background-color: #dbeafe;
        color: #1e40af;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .status-due {
        background-color: #fdf4ff;
        color: #a21caf;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .status-in-progress {
        background-color: #fef3c7;
        color: #92400e;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .status-completed {
        background-color: #d1fae5;
        color: #065f46;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .status-overdue {
        background-color: #fee2e2;
        color: #991b1b;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    /* Individual release status styles */
    .text-success {
        color: #059669 !important;
        font-weight: 500;
    }

    .text-warning {
        color: #d97706 !important;
        font-weight: 500;
    }

    .text-danger {
        color: #dc2626 !important;
        font-weight: 500;
    }

    .text-info {
        color: #0891b2 !important;
        font-weight: 500;
    }

    /* Action buttons styling */
    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        line-height: 1.5;
        border-radius: 0.2rem;
        min-width: 32px;
        height: 32px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
    }

        .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }

    .btn-info {
        background-color: #17a2b8;
        border-color: #17a2b8;
        color: white;
    }

        .btn-info:hover {
            background-color: #138496;
            border-color: #117a8b;
        }

    .flex {
        display: flex;
    }

    .gap-1 {
        gap: 0.25rem;
    }

    /* Summary cards responsive grid */
    @@media (max-width: 768px) {
        .grid-cols-1.md\\:grid-cols-4

    {
        grid-template-columns: repeat(2, 1fr);
    }

    .table-responsive {
        font-size: 0.875rem;
    }

    .btn-sm {
        padding: 0.125rem 0.25rem;
        font-size: 0.75rem;
        min-width: 28px;
        height: 28px;
    }

    #job-release-details-table th,
    #job-release-details-table td {
        padding: 0.5rem 0.25rem;
    }

    }

    @@media (max-width: 640px) {
        .grid-cols-1.md\\:grid-cols-4

    {
        grid-template-columns: 1fr;
    }

    }

    /* Dark mode adjustments */
    .dark .status-scheduled {
        background-color: rgba(59, 130, 246, 0.2);
        color: #93c5fd;
    }

    .dark .status-due {
        background-color: rgba(162, 28, 175, 0.2);
        color: #e879f9;
    }

    .dark .status-in-progress {
        background-color: rgba(245, 158, 11, 0.2);
        color: #fbbf24;
    }

    .dark .status-completed {
        background-color: rgba(16, 185, 129, 0.2);
        color: #6ee7b7;
    }

    .dark .status-overdue {
        background-color: rgba(239, 68, 68, 0.2);
        color: #fca5a5;
    }

    .dark .progress-bar-large {
        background-color: #374151;
        border-color: #4b5563;
    }

    .dark .table {
        color: #e5e7eb;
    }

    .dark .card {
        background-color: #1f2937;
        border-color: #374151;
    }

    .dark .card-header {
        background-color: #111827;
        border-color: #374151;
    }

    /* DataTables dark mode */
    .dark .dataTables_wrapper .dataTables_filter input,
    .dark .dataTables_wrapper .dataTables_length select {
        background-color: #374151;
        border-color: #4b5563;
        color: white;
    }

    .dark .dataTables_wrapper .dataTables_info,
    .dark .dataTables_wrapper .dataTables_paginate {
        color: #e5e7eb;
    }

    /* Animate cards on load */
    .card {
        animation: fadeInUp 0.5s ease-out;
    }

    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Delay animation for each card */
    .card:nth-child(1) {
        animation-delay: 0.1s;
    }

    .card:nth-child(2) {
        animation-delay: 0.2s;
    }

    .card:nth-child(3) {
        animation-delay: 0.3s;
    }

    .card:nth-child(4) {
        animation-delay: 0.4s;
    }

    .card:nth-child(5) {
        animation-delay: 0.5s;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            initJobReleaseDetailsTable();
            animateProgressBar();
        });

        function initJobReleaseDetailsTable() {
            const jobId = document.getElementById("job-release-details-table").dataset.jobId;
            const token = $('input[name="__RequestVerificationToken"]').val();

            // Check if dark mode is active
            const isDarkMode = document.documentElement.classList.contains('dark') ||
                document.body.classList.contains('dark');

            $('#job-release-details-table').DataTable({
                processing: true,
                serverSide: true,
                responsive: false, // Disable DataTables responsive as we handle it with CSS
                scrollX: true, // Enable horizontal scrolling
                scrollCollapse: true,
                autoWidth: false, // Prevent auto width calculation
                ajax: {
                    url: `/RawMaterial/GetPaginatedJobReleaseDetails?jobId=${jobId}`,
                    type: 'POST',
                    contentType: 'application/json',
                    headers: {
                        'X-CSRF-TOKEN': token
                    },
                    data: function(d) {
                        return JSON.stringify(d);
                    }
                },
                columnDefs: [
                    { width: "120px", targets: 0 }, // Material No
                    { width: "250px", targets: 1 }, // Description
                    { width: "120px", targets: 2 }, // Release Date
                    { width: "120px", targets: 3 }, // Status
                    { width: "120px", targets: 4 }, // Release Type
                    { width: "120px", targets: 5, orderable: false, searchable: false } // Actions
                ],
                columns: [
                    {
                        data: 'materialNo',
                        render: function(data, type, row) {
                            return `<span class="font-medium" title="${data}">${data}</span>`;
                        }
                    },
                    {
                        data: 'materialDescription',
                        render: function(data, type, row) {
                            if (!data || data.trim() === '') {
                                return '<span class="text-muted">-</span>';
                            }
                            // Truncate long descriptions
                            if (data.length > 30) {
                                return `<span title="${data}">${data.substring(0, 30)}...</span>`;
                            }
                            return `<span title="${data}">${data}</span>`;
                        }
                    },
                    {
                        data: 'releaseDate',
                        render: function(data, type, row) {
                            const date = new Date(data);
                            const today = new Date();
                            today.setHours(0, 0, 0, 0);
                            const releaseDate = new Date(date);
                            releaseDate.setHours(0, 0, 0, 0);

                            let dateClass = '';
                            if (!row.isCompleted && releaseDate < today) {
                                dateClass = 'text-danger font-weight-bold'; // Overdue
                            } else if (!row.isCompleted && releaseDate.getTime() === today.getTime()) {
                                dateClass = 'text-warning font-weight-bold'; // Due today
                            }

                            return `<span class="${dateClass}">${date.toLocaleDateString()}</span>`;
                        }
                    },
                    {
                        data: 'status',
                        render: function(data, type, row) {
                            return `<span class="${row.statusClass}">${data}</span>`;
                        }
                    },
                    {
                        data: 'releaseTypeText',
                        render: function(data, type, row) {
                            return data || '-';
                        }
                    },
                    {
                        data: null,
                        render: function(data, type, row) {
                            let buttons = `
                                <div class="flex gap-1">
                                    <button onclick="viewIndividualReleaseDetails('${row.releaseId}')"
                                            class="btn btn-sm btn-info" title="View Details">
                                        <iconify-icon icon="lucide:eye"></iconify-icon>
                                    </button>`;

                            // Only show delete button if user has delete access
                            if (row.hasDeleteAccess) {
                                buttons += `
                                    <button onclick="deleteRelease('${row.releaseId}', '${row.materialNo}')"
                                            class="btn btn-sm btn-danger" title="Delete Release">
                                        <iconify-icon icon="lucide:trash-2"></iconify-icon>
                                    </button>`;
                            }

                            buttons += `</div>`;
                            return buttons;
                        }
                    }
                ],
                order: [[2, 'asc']], // Order by release date ascending
                dom: '<"flex justify-between items-center mb-4"<"flex"f><"flex-1 text-right"l>>rt<"flex justify-between items-center mt-4"<"flex-1"i><"flex"p>>',
                language: {
                    search: "",
                    searchPlaceholder: "Search releases...",
                    lengthMenu: "_MENU_ per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ releases",
                    paginate: {
                        first: '<iconify-icon icon="heroicons-outline:chevron-double-left"></iconify-icon>',
                        last: '<iconify-icon icon="heroicons-outline:chevron-double-right"></iconify-icon>',
                        next: '<iconify-icon icon="heroicons-outline:chevron-right"></iconify-icon>',
                        previous: '<iconify-icon icon="heroicons-outline:chevron-left"></iconify-icon>'
                    },
                    zeroRecords: "No releases found in this job",
                    emptyTable: "No release data available"
                },
                initComplete: function() {
                    if (isDarkMode) {
                        $('.dataTables_filter input').addClass('bg-gray-700 border-gray-600 text-white');
                        $('.dataTables_length select').addClass('bg-gray-700 border-gray-600 text-white');
                        $(this).closest('.dataTables_wrapper').addClass('dark-mode-table');
                    }

                    // Fix any width issues after initialization
                    $(window).trigger('resize');
                }
            });
        }

        function viewIndividualReleaseDetails(releaseId) {
            // Open in new tab
            window.open(`/RawMaterial/ReleaseDetails/${releaseId}`, '_blank');
        }

        function animateProgressBar() {
            // Animate the progress bar on page load
            setTimeout(function() {
                const progressFill = document.querySelector('.progress-fill');
                if (progressFill) {
                    const width = progressFill.style.width;
                    progressFill.style.width = '0%';
                    setTimeout(function() {
                        progressFill.style.width = width;
                    }, 100);
                }
            }, 500);
        }

        // Add some interactive effects
        $(document).ready(function() {
            // Hover effect for summary cards
            $('.card').hover(
                function() {
                    $(this).css('transform', 'translateY(-2px)');
                    $(this).css('box-shadow', '0 8px 25px rgba(0, 0, 0, 0.15)');
                },
                function() {
                    $(this).css('transform', 'translateY(0)');
                    $(this).css('box-shadow', '');
                }
            );

            // Export to Excel functionality
            $('#export-excel-btn').click(function() {
                exportJobReleaseToExcel();
            });
        });

        function exportJobReleaseToExcel() {
            const jobId = document.getElementById("job-release-details-table").dataset.jobId;
            const token = $('input[name="__RequestVerificationToken"]').val();

            // Show loading state
            const btn = $('#export-excel-btn');
            const originalHtml = btn.html();
            btn.html('<iconify-icon icon="mdi:loading" class="animate-spin"></iconify-icon> Exporting...');
            btn.prop('disabled', true);

            // Create a form and submit it to trigger download
            const form = $('<form>', {
                'method': 'POST',
                'action': `/RawMaterial/ExportJobReleaseToExcel/${jobId}`
            });

            // Add CSRF token
            form.append($('<input>', {
                'type': 'hidden',
                'name': '__RequestVerificationToken',
                'value': token
            }));

            // Append form to body and submit
            $('body').append(form);
            form.submit();
            form.remove();

            // Reset button state after a delay
            setTimeout(function() {
                btn.html(originalHtml);
                btn.prop('disabled', false);
            }, 2000);
        }

        function deleteRelease(releaseId, materialNo) {
            Swal.fire({
                title: 'Delete Release?',
                html: `Are you sure you want to delete the release for <strong>${materialNo}</strong>?<br><br>
                       <span class="text-warning">This will delete the release and all its details.</span>`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, Delete Release',
                cancelButtonText: 'Cancel',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading state
                    Swal.fire({
                        title: 'Deleting...',
                        text: 'Please wait while we delete the release.',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    // Make the delete request
                    $.post('/RawMaterial/DeleteRelease', {
                        releaseId: releaseId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Deleted!',
                                text: response.message,
                                icon: 'success',
                                timer: 3000,
                                showConfirmButton: false
                            });

                            // Refresh the DataTable
                            if ($.fn.DataTable.isDataTable('#job-release-details-table')) {
                                $('#job-release-details-table').DataTable().ajax.reload();
                            }
                        } else {
                            Swal.fire({
                                title: 'Delete Failed',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .fail(function(xhr, status, error) {
                        Swal.fire({
                            title: 'Error',
                            text: 'An error occurred while deleting the release. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        console.error('Delete release error:', error);
                    });
                }
            });
        }
    </script>
}