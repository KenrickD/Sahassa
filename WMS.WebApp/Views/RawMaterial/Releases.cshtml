@model WMS.Domain.DTOs.GIV_RawMaterial.RawMaterialDetailsDto
@{
    ViewData["Title"] = "Raw Material Releases";
}
@Html.AntiForgeryToken()

<div class="card p-3 mb-4">
    <div class="flex justify-between items-center">
        <div>
            <h4>Material No: @Model.MaterialNo - Releases</h4>
            <p><strong>Description:</strong> @Model.Description</p>
            <p><strong>Total Balance Quantity:</strong> @Model.TotalBalanceQty</p>
            <p><strong>Total Balance Pallet:</strong> @Model.TotalBalancePallet</p>
        </div>
        <div class="flex gap-2">
            <a href="@Url.Action("Details", new { id = Model.Id })" class="btn btn-secondary">
                <iconify-icon icon="lucide:arrow-left"></iconify-icon>
                Back to Details
            </a>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <div class="flex justify-between items-center">
            <h5 class="card-title">Release History</h5>
            <div class="text-sm text-gray-600 dark:text-gray-400">
                <iconify-icon icon="lucide:info" class="mr-1"></iconify-icon>
                <span class="hidden md:inline">Search by dates, pallet codes, item codes, usernames, or remarks</span>
                <span class="md:hidden">Advanced search available</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table id="releases-table" class="table table-striped" data-raw-material-id="@Model.Id">
            <thead>
                <tr>
                    <th>Planned Release Date</th>
                    <th>Released By</th>
                    <th>Status</th>
                    <th>Release Type</th>
                    @* <th>Progress</th> *@
                    <th>Actual Release Date</th>
                    <th>Actual Released By</th>
                    <th>Remarks</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- Populated via DataTables -->
            </tbody>
        </table>
    </div>
</div>

<style>
    /* Status badges */
    .status-completed {
        background-color: #10b981;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.75rem;
        font-weight: 600;
    }

    .status-partial {
        background-color: #f59e0b;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.75rem;
        font-weight: 600;
    }

    .status-due {
        background-color: #ef4444;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.75rem;
        font-weight: 600;
    }

    .status-scheduled {
        background-color: #6b7280;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.75rem;
        font-weight: 600;
    }

    /* Progress bar */
    .progress {
        height: 1rem;
        background-color: #e5e7eb;
        border-radius: 0.375rem;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        background-color: #3b82f6;
        transition: width 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 0.75rem;
        font-weight: 600;
    }

    /* Dark mode styles */
    .dark .progress {
        background-color: #374151;
    }

    .dark .table {
        color: #e5e7eb;
    }

    .dark .card {
        background-color: #1f2937;
        border-color: #374151;
    }

    .dark .card-header {
        background-color: #111827;
        border-color: #374151;
    }

    /* DataTables dark mode */
    .dark .dataTables_wrapper .dataTables_filter input,
    .dark .dataTables_wrapper .dataTables_length select {
        background-color: #374151;
        border-color: #4b5563;
        color: white;
    }

    .dark .dataTables_wrapper .dataTables_info,
    .dark .dataTables_wrapper .dataTables_paginate {
        color: #e5e7eb;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            initReleasesTable();
        });

        function initReleasesTable() {
            const rawMaterialId = document.getElementById("releases-table").dataset.rawMaterialId;
            const token = $('input[name="__RequestVerificationToken"]').val();

            // Check if dark mode is active
            const isDarkMode = document.documentElement.classList.contains('dark') ||
                document.body.classList.contains('dark');

            $('#releases-table').DataTable({
                processing: true,
                serverSide: true,
                ajax: {
                    url: `/RawMaterial/GetPaginatedReleases?rawMaterialId=${rawMaterialId}`,
                    type: 'POST',
                    contentType: 'application/json',
                    headers: {
                        'X-CSRF-TOKEN': token,
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    data: function (d) {
                        return JSON.stringify(d);
                    },
                    error: function (xhr, error, thrown) {
                        console.error('Failed to load release data:', error);
                    }
                },
                columns: [
                    {
                        data: 'releaseDate',
                        render: function (data, type, row) {
                            const date = new Date(data);
                            return date.toLocaleDateString() + '<br><small class="text-muted">' + date.toLocaleTimeString() + '</small>';
                        }
                    },
                    { data: 'releasedByDisplay' },
                    {
                        data: 'statusText',
                        render: function (data, type, row) {
                            const statusClass = getStatusClass(data);
                            return `<span class="${statusClass}">${data}</span>`;
                        }
                    },
                    { data: 'releaseTypeText' },
                    // {
                    //     data: null,
                    //     render: function (data, type, row) {
                    //         const total = row.totalPallets + row.totalItems;
                    //         const released = row.releasedPallets + row.releasedItems;
                    //         const percentage = total > 0 ? Math.round((released / total) * 100) : 0;

                    //         return `
                    //             <div class="progress">
                    //                 <div class="progress-bar" style="width: ${percentage}%">
                    //                     ${released}/${total}
                    //                 </div>
                    //             </div>
                    //         `;
                    //     }
                    // },
                    {
                        data: 'actualReleaseDate',
                        render: function (data, type, row) {
                            if (!data) return '<span class="text-muted">Not released</span>';
                            const date = new Date(data);
                            return date.toLocaleDateString() + '<br><small class="text-muted">' + date.toLocaleTimeString() + '</small>';
                        }
                    },
                    {
                        data: 'actualReleasedByDisplay',
                        render: function (data, type, row) {
                            return data === "-" ? '<span class="text-muted">-</span>' : data;
                        }
                    },
                    {
                        data: 'remarks',
                        render: function (data, type, row) {
                            if (!data || data.trim() === '') {
                                return '<span class="text-muted">-</span>';
                            }
                            // Truncate long remarks
                            if (data.length > 50) {
                                return `<span title="${data}">${data.substring(0, 50)}...</span>`;
                            }
                            return data;
                        }
                    },
                    {
                        data: null,
                        orderable: false,
                        searchable: false,
                        render: function (data, type, row) {
                            return `
                                <button class="btn btn-sm btn-primary" onclick="viewReleaseDetails('${row.id}')">
                                    <iconify-icon icon="lucide:eye"></iconify-icon>
                                    Details
                                </button>
                            `;
                        }
                    }
                ],
                order: [[0, 'desc']],
                dom: '<"flex justify-between items-center mb-4"<"flex"f><"flex-1 text-right"l>>rt<"flex justify-between items-center mt-4"<"flex-1"i><"flex"p>>',
                language: {
                    search: "",
                    searchPlaceholder: "Search releases, dates, pallet codes, item codes...",
                    lengthMenu: "_MENU_ per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ releases",
                    paginate: {
                        first: '<iconify-icon icon="heroicons-outline:chevron-double-left"></iconify-icon>',
                        last: '<iconify-icon icon="heroicons-outline:chevron-double-right"></iconify-icon>',
                        next: '<iconify-icon icon="heroicons-outline:chevron-right"></iconify-icon>',
                        previous: '<iconify-icon icon="heroicons-outline:chevron-left"></iconify-icon>'
                    },
                    zeroRecords: "No releases found",
                    emptyTable: "No release data available"
                },
                initComplete: function () {
                    if (isDarkMode) {
                        $('.dataTables_filter input').addClass('bg-gray-700 border-gray-600 text-white');
                        $('.dataTables_length select').addClass('bg-gray-700 border-gray-600 text-white');
                        $(this).closest('.dataTables_wrapper').addClass('dark-mode-table');
                    }
                }
            });
        }

        function getStatusClass(status) {
            switch (status.toLowerCase()) {
                case 'completed':
                    return 'status-completed';
                case 'partially released':
                    return 'status-partial';
                case 'due for release':
                    return 'status-due';
                case 'scheduled':
                    return 'status-scheduled';
                default:
                    return 'status-scheduled';
            }
        }

        function viewReleaseDetails(releaseId) {
            const rawMaterialId = document.getElementById("releases-table").dataset.rawMaterialId;
            window.location.href = `/RawMaterial/ReleaseDetails?id=${releaseId}&rawMaterialId=${rawMaterialId}`;
        }
    </script>
}